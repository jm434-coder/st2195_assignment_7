theme(
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
axis.line = element_line(color = "black")
)
############## proportion ####################
ggplot(df %>% mutate(
pclass = factor(pclass, levels = c(1, 2, 3), labels = c("1st Class", "2nd Class", "3rd Class")),
sex = factor(sex, levels = c("female", "male")),
survived = factor(survived, levels = c(0, 1), labels = c("Died", "Survived"))
),
aes(x = sex, fill = survived)) +
geom_bar(position = "fill") +
facet_wrap(~ pclass) +
scale_fill_manual(values = survival_colors) +
labs(
title = "Survival by Gender and Ticket Class",
x = "Sex",
y = "Proportion",
fill = "Survival Status"
) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
axis.line = element_line(color = "black")
)
############## count ####################
ggplot(df %>% mutate(
pclass = factor(pclass, levels = c(1, 2, 3), labels = c("1st Class", "2nd Class", "3rd Class")),
sex = factor(sex, levels = c("female", "male")),
survived = factor(survived, levels = c(0, 1), labels = c("Died", "Survived"))
),
aes(x = sex, fill = survived)) +
geom_bar(position = "stack") +
facet_wrap(~ pclass) +
scale_fill_manual(values = survival_colors) +
labs(
title = "Survival by Gender and Ticket Class",
x = "Sex",
y = "Number of Passangers",
fill = "Survival Status"
) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
axis.line = element_line(color = "black")
)
############## legend gender ####################
#op 1 legend
ggplot(df %>% filter(!is.na(age)),
aes(x = factor(survived,
levels = c(0, 1),
labels = c("Death", "Survived")),
y = age,
fill = sex)) +
geom_violin(trim = FALSE, scale = "count") +
labs(
title = "Age Distribution by Survival and Gender",
x = "Survival Status",
y = "Age",
fill = "Gender"
) +
scale_fill_manual(values = gender_colors) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
axis.line = element_line(color = "black")
)
#op 2 no legend, facet wrap
ggplot(df %>% filter(!is.na(age)) %>%
mutate(
sex = factor(sex, levels = c("female", "male")),
survived = factor(survived, levels = c(0, 1), labels = c("Died", "Survived"))
),
aes(x = sex,
y = age,
fill = sex)) +
geom_violin(trim = FALSE, scale = "count") +
facet_wrap(~ survived) +
labs(
title = "Age Distribution by Survival and Gender",
x = "Gender",
y = "Age",
fill = "Gender"
) +
scale_fill_manual(values = gender_colors) +
theme(
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
axis.line = element_line(color = "black")
)
#op 3 overlap
ggplot(df %>% filter(!is.na(age)) %>%
mutate(
sex = factor(sex, levels = c("female", "male")),
survived = factor(survived, levels = c(0, 1), labels = c("Died", "Survived"))
),
aes(x = survived, y = age, fill = sex)) +
geom_violin(trim = TRUE, scale = "count", position = "identity", alpha = 0.5) +
labs(
title = "Age Distribution by Survival and Gender",
x = "Survival Status",
y = "Age",
fill = "Gender"
) +
scale_fill_manual(values = gender_colors) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
axis.line = element_line(color = "black")
)
############## legend survival ####################
#op 1 legend
ggplot(df %>% filter(!is.na(age)),
aes(x = sex,
y = age,
fill = factor(survived,
levels = c(0, 1),
labels = c("Death", "Survived")))) +
geom_violin(trim = FALSE, scale = "count") +
labs(
title = "Age Distribution by Survival and Gender",
x = "Gender",
y = "Age",
fill = "Survival Status"
) +
scale_fill_manual(values = survival_colors) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
axis.line = element_line(color = "black")
)
#op 2 no legend face wrap
ggplot(df %>% filter(!is.na(age)) %>%
mutate(
sex = factor(sex, levels = c("female", "male")),
survived = factor(survived, levels = c(0, 1), labels = c("Died", "Survived"))
),
aes(x = survived,
y = age,
fill = survived)) +
geom_violin(trim = FALSE, scale = "count") +
facet_wrap(~ sex) +
labs(
title = "Age Distribution by Survival and Gender",
x = "Survival Status",
y = "Age",
fill = "Gender"
) +
scale_fill_manual(values = survival_colors) +
theme(
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
axis.line = element_line(color = "black")
)
#op 3 overlap
ggplot(df %>% filter(!is.na(age)) %>%
mutate(
sex = factor(sex, levels = c("female", "male")),
survived = factor(survived, levels = c(0, 1), labels = c("Died", "Survived"))
),
aes(x = sex, y = age, fill = survived)) +
geom_violin(trim = TRUE, scale = "count", position = "identity", alpha = 0.5) +
labs(
title = "Age Distribution by Survival and Gender",
x = "Gender",
y = "Age",
fill = "Survival Status"
) +
scale_fill_manual(values = survival_colors) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
axis.line = element_line(color = "black")
)
#op 1 x survived
ggplot(df %>% filter(!is.na(age)) %>%
mutate(
survived = factor(survived,
levels = c(0, 1),
labels = c("Died", "Survived")),
pclass = factor(pclass,
levels = c(1, 2, 3),
labels = c("1st Class", "2nd Class", "3rd Class"))),
aes(x = survived, y = age, fill = survived)) +
geom_violin(trim = TRUE, scale = "count") +
facet_wrap(~ pclass) +
scale_fill_manual(values = survival_colors) +
labs(
title = "Age Distribution by Survival and Ticket Class",
x = "Survival Status",
y = "Age",
fill = "Survival"
) +
theme(
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
axis.line = element_line(color = "black")
)
#op 2 x class
ggplot(df %>% filter(!is.na(age)) %>%
mutate(
survived = factor(survived,
levels = c(0, 1),
labels = c("Died", "Survived")),
pclass = factor(pclass,
levels = c(1, 2, 3),
labels = c("1st Class", "2nd Class", "3rd Class"))),
aes(x = pclass, y = age, fill = pclass)) +
geom_violin(trim = TRUE, scale = "count") +
facet_wrap(~ survived) +
scale_fill_manual(values = ticket_colors) +
labs(
title = "Age Distribution by Survival and Ticket Class",
x = "Survival Status",
y = "Age",
fill = "Survival"
) +
theme(
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
axis.line = element_line(color = "black")
)
#op 3 overlap, x class
ggplot(df %>% filter(!is.na(age)) %>%
mutate(
survived = factor(survived,
levels = c(0, 1),
labels = c("Died", "Survived")),
pclass = factor(pclass,
levels = c(1, 2, 3),
labels = c("1st Class", "2nd Class", "3rd Class"))),
aes(x = pclass, y = age, fill = survived)) +
geom_violin(trim = TRUE, scale = "count", position = "identity", alpha = 0.5) +
scale_fill_manual(values = survival_colors) +
labs(
title = "Age Distribution by Survival and Ticket Class",
x = "Ticket Class",
y = "Age",
fill = "Survival"
) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
axis.line = element_line(color = "black")
)
#op 4 overlap, x survival
#unreadable but prettyyyy :)
ggplot(df %>% filter(!is.na(age)) %>%
mutate(
survived = factor(survived,
levels = c(0, 1),
labels = c("Died", "Survived")),
pclass = factor(pclass,
levels = c(1, 2, 3),
labels = c("1st Class", "2nd Class", "3rd Class"))),
aes(x = survived, y = age, fill = pclass)) +
geom_violin(trim = TRUE, scale = "count", position = "identity", alpha = 0.5) +
scale_fill_manual(values = ticket_colors) +
labs(
title = "Age Distribution by Survival and Ticket Class",
x = "Survival Status",
y = "Age",
fill = "Ticket Class"
) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
axis.line = element_line(color = "black")
)
ggplot(df %>% filter(!is.na(age)) %>%
mutate(
survived_num = as.numeric(as.character(survived)),  # if not already numeric
pclass = factor(pclass, levels = c(1, 2, 3), labels = c("1st", "2nd", "3rd")),
survived = factor(survived, levels = c(0, 1), labels = c("Died", "Survived"))
),
aes(x = age, y = survived_num, color = pclass)) +
geom_jitter(height = 0.1, width = 0, alpha = 0.6, size = 2) +
scale_y_continuous(breaks = c(0, 1), labels = c("Died", "Survived")) +
scale_color_brewer(palette = "Set2") +
labs(
title = "Survival by Age and Ticket Class",
x = "Age",
y = "Survival Status",
color = "Ticket Class"
) +
theme_minimal()
ggplot(df %>% filter(!is.na(age)) %>%
mutate(
survived_num = as.numeric(as.character(survived)),  # if not already numeric
pclass = factor(pclass, levels = c(1, 2, 3), labels = c("1st", "2nd", "3rd")),
survived = factor(survived, levels = c(0, 1), labels = c("Died", "Survived"))
),
aes(x = age, y = pclass, color = survived_num)) +
geom_jitter(height = 0.1, width = 0, alpha = 0.6, size = 2) +
scale_y_continuous(breaks = c(0, 1), labels = c("Died", "Survived")) +
scale_color_brewer(palette = "Set2") +
labs(
title = "Survival by Age and Ticket Class",
x = "Age",
y = "Survival Status",
color = "Ticket Class"
) +
theme_minimal()
ggplot(df %>% filter(!is.na(age)) %>%
mutate(
survived_num = as.numeric(as.character(survived)),
pclass_num = as.numeric(as.character(pclass))
pclass = factor(pclass, levels = c(1, 2, 3), labels = c("1st", "2nd", "3rd")),
ggplot(df %>% filter(!is.na(age)) %>%
mutate(
survived_num = as.numeric(as.character(survived)),
pclass_num = as.numeric(as.character(pclass)),
pclass = factor(pclass, levels = c(1, 2, 3), labels = c("1st", "2nd", "3rd")),
survived = factor(survived, levels = c(0, 1), labels = c("Died", "Survived"))
),
aes(x = age, y = pclass, color = survived_num)) +
geom_jitter(height = 0.1, width = 0, alpha = 0.6, size = 2) +
scale_y_continuous(breaks = c(0, 1), labels = c("Died", "Survived")) +
scale_color_brewer(palette = "Set2") +
labs(
title = "Survival by Age and Ticket Class",
x = "Age",
y = "Survival Status",
color = "Ticket Class"
) +
theme_minimal()
ggplot(df %>% filter(!is.na(age)) %>%
mutate(
survived_num = as.numeric(as.character(survived)),
pclass_num = as.numeric(as.character(pclass)),
pclass = factor(pclass, levels = c(1, 2, 3), labels = c("1st", "2nd", "3rd")),
survived = factor(survived, levels = c(0, 1), labels = c("Died", "Survived"))
),
aes(x = age, y = pclass_num, color = survived)) +
geom_jitter(height = 0.1, width = 0, alpha = 0.6, size = 2) +
scale_y_continuous(breaks = c(0, 1), labels = c("Died", "Survived")) +
scale_color_brewer(palette = "Set2") +
labs(
title = "Survival by Age and Ticket Class",
x = "Age",
y = "Survival Status",
color = "Ticket Class"
) +
theme_minimal()
ggplot(df %>% filter(!is.na(age)) %>%
mutate(
survived_num = as.numeric(as.character(survived)),
pclass_num = as.numeric(as.character(pclass)),
pclass = factor(pclass, levels = c(1, 2, 3), labels = c("1st", "2nd", "3rd")),
survived = factor(survived, levels = c(0, 1), labels = c("Died", "Survived"))
),
aes(x = pclass_num, y = age, color = survived)) +
geom_jitter(height = 0.1, width = 0, alpha = 0.6, size = 2) +
scale_y_continuous(breaks = c(0, 1), labels = c("Died", "Survived")) +
scale_color_brewer(palette = "Set2") +
labs(
title = "Survival by Age and Ticket Class",
x = "Age",
y = "Survival Status",
color = "Ticket Class"
) +
theme_minimal()
ggplot(df %>% filter(!is.na(age)) %>%
mutate(
survived_num = as.numeric(as.character(survived)),
pclass_num = as.numeric(as.character(pclass)),
pclass = factor(pclass, levels = c(1, 2, 3), labels = c("1st", "2nd", "3rd")),
survived = factor(survived, levels = c(0, 1), labels = c("Died", "Survived"))
),
aes(x = pclass_num, y = age, color = survived)) +
geom_jitter(height = 0.1, width = 0, alpha = 0.6, size = 2) +
scale_x_continuous(breaks = c(1, 2, 3), labels = c("1st", "2nd", "3rd")) +
scale_color_brewer(palette = "Set2") +
labs(
title = "Survival by Age and Ticket Class",
x = "Age",
y = "Survival Status",
color = "Ticket Class"
) +
theme_minimal()
ggplot(df %>% filter(!is.na(age)) %>%
mutate(
survived_num = as.numeric(as.character(survived)),
pclass_num = as.numeric(as.character(pclass)),
pclass = factor(pclass, levels = c(1, 2, 3), labels = c("1st", "2nd", "3rd")),
survived = factor(survived, levels = c(0, 1), labels = c("Died", "Survived"))
),
aes(x = pclass_num, y = age, color = survived)) +
geom_jitter(height = 0.1, width = 0, alpha = 0.6, size = 2) +
scale_x_continuous(breaks = c(0,1), labels = c("1st", "2nd", "3rd")) +
scale_color_brewer(palette = "Set2") +
labs(
title = "Survival by Age and Ticket Class",
x = "Age",
y = "Survival Status",
color = "Ticket Class"
) +
theme_minimal()
ggplot(df %>% filter(!is.na(age)) %>%
mutate(
survived_num = as.numeric(as.character(survived)),
pclass_num = as.numeric(as.character(pclass)),
pclass = factor(pclass, levels = c(1, 2, 3), labels = c("1st", "2nd", "3rd")),
survived = factor(survived, levels = c(0, 1), labels = c("Died", "Survived"))
),
aes(x = age, y = pclass_num, color = survived)) +
geom_jitter(height = 0.1, width = 0, alpha = 0.6, size = 2) +
scale_y_continuous(breaks = c(0, 1), labels = c("Died", "Survived")) +
scale_color_brewer(palette = "Set2") +
labs(
title = "Survival by Age and Ticket Class",
x = "Age",
y = "Survival Status",
color = "Ticket Class"
) +
theme_minimal()
ggplot(df %>% filter(!is.na(age)) %>%
mutate(
survived_num = as.numeric(as.character(survived)),
pclass_num = as.numeric(as.character(pclass)),
pclass = factor(pclass, levels = c(1, 2, 3), labels = c("1st", "2nd", "3rd")),
survived = factor(survived, levels = c(0, 1), labels = c("Died", "Survived"))
),
aes(x = age, y = pclass_num, color = survived)) +
geom_jitter(height = 0.1, width = 0, alpha = 0.6, size = 2) +
scale_y_continuous(breaks = c(0, 1, 2), labels = c("1st", "2nd", "3rd")) +
scale_color_brewer(palette = "Set2") +
labs(
title = "Survival by Age and Ticket Class",
x = "Age",
y = "Survival Status",
color = "Ticket Class"
) +
theme_minimal()
ggplot(df %>% filter(!is.na(age)) %>%
mutate(
survived_num = as.numeric(as.character(survived)),
pclass_num = as.numeric(as.character(pclass)),
pclass = factor(pclass, levels = c(1, 2, 3), labels = c("1st", "2nd", "3rd")),
survived = factor(survived, levels = c(0, 1), labels = c("Died", "Survived"))
),
aes(x = age, y = pclass_num, color = survived)) +
geom_jitter(height = 0.1, width = 0, alpha = 0.6, size = 2) +
scale_y_continuous(breaks = c(0, 1), labels = c("1st", "2nd", "3rd")) +
scale_color_brewer(palette = "Set2") +
labs(
title = "Survival by Age and Ticket Class",
x = "Age",
y = "Survival Status",
color = "Ticket Class"
) +
theme_minimal()
ggplot(df %>% filter(!is.na(age)) %>%
mutate(
survived_num = as.numeric(as.character(survived)),
pclass_num = as.numeric(as.character(pclass)),
pclass = factor(pclass, levels = c(1, 2, 3), labels = c("1st", "2nd", "3rd")),
survived = factor(survived, levels = c(0, 1), labels = c("Died", "Survived"))
),
aes(x = age, y = pclass_num, color = survived)) +
geom_jitter(height = 0.1, width = 0, alpha = 0.6, size = 2) +
scale_y_continuous(breaks = c(1, 2, 3), labels = c("1st", "2nd", "3rd")) +
scale_color_brewer(palette = "Set2") +
labs(
title = "Survival by Age and Ticket Class",
x = "Age",
y = "Survival Status",
color = "Ticket Class"
) +
theme_minimal()
ggplot(df %>% filter(!is.na(age)) %>%
mutate(
survived_num = as.numeric(as.character(survived)),
pclass_num = as.numeric(as.character(pclass)),
pclass = factor(pclass, levels = c(1, 2, 3), labels = c("1st", "2nd", "3rd")),
survived = factor(survived, levels = c(0, 1), labels = c("Died", "Survived"))
),
aes(x = age, y = pclass_num, color = survived)) +
geom_jitter(height = 0.1, width = 0, alpha = 0.6, size = 2) +
scale_y_continuous(breaks = c(1, 2, 3), labels = c("1st", "2nd", "3rd")) +
scale_fill_manual(values = survival_colors) +
labs(
title = "Survival by Age and Ticket Class",
x = "Age",
y = "Ticket Class",
color = "Survival Status"
) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
axis.line = element_line(color = "black")
)
